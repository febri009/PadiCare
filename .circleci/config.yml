version: 2.1
orbs:
  android: circleci/android@2.3.0

jobs:
  build:
    docker:
      - image: cimg/android:2023.09
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android/build-cache
            - ~/.android/cache
      - run:
          name: Run Build
          command: ./gradlew build
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs/apk/debug/
          destination: artifact-file

  test:
    docker:
      - image: cimg/android:2023.09
    resource_class: large
    steps:
      - checkout
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Run Firebase Test Lab
          command: |
            sdkmanager "platform-tools" "platforms;android-29" "build-tools;30.0.0"
            sdkmanager "extras;google;google_play_services"
            sdkmanager "extras;google;m2repository"
            sdkmanager "system-images;android-29;google_apis;arm64-v8a"

            echo no | avdmanager create avd -n test-emulator -k "system-images;android-29;google_apis;arm64-v8a"
            emulator -avd test-emulator -noaudio -no-boot-anim -gpu off -no-window &
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
            adb shell wm dismiss-keyguard
            sleep 1
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0

            ./gradlew assembleDebug  # or assembleRelease depending on your needs
            ./gradlew assembleDebugAndroidTest

            gcloud firebase test android run \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/debug/app-debug-androidTest.apk \
              --type robo


  publish-github-release:
    docker:
      - image: cimg/android:2023.09
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="1.1"
            TAG_NAME="v${VERSION}"
            RELEASE_NAME="Release ${VERSION}"

            curl -X POST "https://api.github.com/repos/febri009/PadiCare/releases" \
              -H "Authorization: Bearer ${GH_TOKEN}" \
              -H "Content-Type: application/json" \
              -d '{
                "tag_name": "'"${TAG_NAME}"'",
                "name": "'"${RELEASE_NAME}"'",
                "body": "Release '"${VERSION}"'",
                "draft": false,
                "prerelease": false
              }'

workflows:
  version: 2
  workflow:
    jobs:
      - test